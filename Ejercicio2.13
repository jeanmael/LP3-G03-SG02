import java.util.Scanner;

public class Fecha {
    private int dia;
    private int mes;
    private int anio;

    public Fecha() {
        this.dia = 1;
        this.mes = 1;
        this.anio = 1900;
    }

    public Fecha(int dia, int mes, int anio) {
        this.dia = dia;
        this.mes = mes;
        this.anio = anio;
        valida();
    }

    public void leer() {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Ingrese el día (1 a 31):");
        this.dia = scanner.nextInt();

        System.out.println("Ingrese el mes (1 a 12):");
        this.mes = scanner.nextInt();

        System.out.println("Ingrese el año (1900 a 2050):");
        this.anio = scanner.nextInt();

        valida();
        scanner.close();
    }

    public boolean bisiesto() {
        return (anio % 4 == 0 && anio % 100 != 0) || (anio % 400 == 0);
    }

    public int diasMes(int mes) {
        int[] diasPorMes = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        if (mes == 2 && bisiesto()) {
            return 29;
        }
        return diasPorMes[mes];
    }
    
    private void valida() {
        if (anio < 1900 || anio > 2050) {
            anio = 1900;
        }
        if (mes < 1 || mes > 12) {
            mes = 1;
        }
        int maxDias = diasMes(mes);
        if (dia < 1 || dia > maxDias) {
            dia = 1;
        }
    }

    public void corta() {
        System.out.printf("%02d-%02d-%04d%n", dia, mes, anio);
    }

    public long diasTranscurridos() {
        int[] diasPorMes = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        long diasTranscurridos = 0;

        for (int i = 1900; i < anio; i++) {
            if (bisiesto()) {
                diasTranscurridos += 366;
            } else {
                diasTranscurridos += 365;
            }
        }

        for (int i = 1; i < mes; i++) {
            diasTranscurridos += diasPorMes[i];
        }

        diasTranscurridos += dia;

        if (mes > 2 && bisiesto()) {
            diasTranscurridos++;
        }

        return diasTranscurridos;
    }

    public int diaSemana() {
        // Zeller's Congruence Algorithm
        int m = mes;
        int y = anio;

        if (m < 3) {
            m += 12;
            y -= 1;
        }

        int h = (dia + (13 * (m + 1)) / 5 + y + (y / 4) - (y / 100) + (y / 400)) % 7;
        return h;
    }

    public void larga() {
        System.out.println(obtenerFechaLarga());
    }

    private String obtenerFechaLarga() {
        String[] diasSemana = {"domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"};
        String nombreDiaSemana = diasSemana[diaSemana()];
        return nombreDiaSemana + " " + dia + " de " + obtenerNombreMes() + " de " + anio;
    }

    private String obtenerNombreMes() {
        String[] nombresMeses = {"", "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"};
        return nombresMeses[mes];
    }

    public void fechaTras(long dias) {
        long diasActuales = diasTranscurridos();
        long diasTotales = diasActuales + dias;

        if (diasTotales < 0) {
            System.out.println("No se puede calcular una fecha antes del 1-1-1900.");
            return;
        }

        int nuevoAnio = 1900;
        while (diasTotales >= (bisiesto() ? 366 : 365)) {
            diasTotales -= bisiesto() ? 366 : 365;
            nuevoAnio++;
        }

        int nuevoMes = 1;
        while (diasTotales >= diasMes(nuevoMes)) {
            diasTotales -= diasMes(nuevoMes);
            nuevoMes++;
        }

        int nuevoDia = (int) diasTotales + 1;

        this.dia = nuevoDia;
        this.mes = nuevoMes;
        this.anio = nuevoAnio;
    }

    public long diasEntre(Fecha otraFecha) {
        long diasActuales = diasTranscurridos();
        long diasOtraFecha = otraFecha.diasTranscurridos();
        return Math.abs(diasActuales - diasOtraFecha);
    }

    public static void main(String[] args) {
        Fecha fechaPredeterminada = new Fecha();
        fechaPredeterminada.imprimirFecha();

        Fecha fechaPersonalizada = new Fecha();
        fechaPersonalizada.leer();
        fechaPersonalizada.imprimirFecha();

        if (fechaPersonalizada.bisiesto()) {
            System.out.println("El año es bisiesto.");
        } else {
            System.out.println("El año no es bisiesto.");
        }

        int mesConsultado = 5;
        int diasEnMes = fechaPersonalizada.diasMes(mesConsultado);
        System.out.println("Número de días en el mes " + mesConsultado + ": " + diasEnMes);

        // Accediendo y modificando los atributos usando los accesorios y mutadores
        System.out.println("Día: " + fechaPersonalizada.getDia());
        System.out.println("Mes: " + fechaPersonalizada.getMes());
        System.out.println("Año: " + fechaPersonalizada.getAnio());

        fechaPersonalizada.setDia(15);
        fechaPersonalizada.setMes(8);
        fechaPersonalizada.setAnio(2000);

        System.out.println("Fecha modificada:");
        fechaPersonalizada.imprimirFecha();

        System.out.println("Fecha en formato corto:");
        fechaPersonalizada.corta();

        int diasTranscurridos = fechaPersonalizada.diasTranscurridos();
        System.out.println("Días transcurridos desde 1-1-1900 hasta la fecha: " + diasTranscurridos);

        int diaDeSemana = fechaPersonalizada.diaSemana();
        System.out.println("Día de la semana (0 para domingo, ..., 6 para sábado): " + diaDeSemana);

        System.out.println("Fecha en formato largo:");
        fechaPersonalizada.larga();

        long diasTras = 15000; 
        fechaPersonalizada.fechaTras(diasTras);
        System.out.println("Fecha tras " + diasTras + " días:");
        fechaPersonalizada.imprimirFecha();

        Fecha otraFecha = new Fecha(15, 12, 2000); 
        long diasEntreFechas = fechaPersonalizada.diasEntre(otraFecha);
        System.out.println("Días entre las fechas: " + diasEntreFechas);
    }
}
